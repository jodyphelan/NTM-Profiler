import sys
import argparse
import ntm_profiler as ntmp


def main_speciate(args):
    if args.external_db:
        conf = ntmp.get_conf_dict_with_path(args.external_db)
    else:
        conf = ntmp.get_conf_dict(args.db)

    results = {"sample_name":args.prefix}
    results["species"] = ntmp.check_for_kmers(conf["kmers"],args.read1)
    outfile = "%s.species.txt" % args.prefix
    ntmp.write_speciation_results(results,outfile)
    

def main_collate(args):
    ntmp.collate_results(args.outfile,args.samples,args.dir)

#### Argument Parsing ####

parser = argparse.ArgumentParser(description='NTM-Profiler pipeline',formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('--version', action='version', version="NTM-Profiler version %s" % ntmp._VERSION)
subparsers = parser.add_subparsers(help="Task to perform")

# Profile #
parser_sub = subparsers.add_parser('speciate', help='Run whole profiling pipeline', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
input=parser_sub.add_argument_group("Input options")
group = input.add_mutually_exclusive_group(required=True)
group.add_argument('--read1','-1',help='First read file')
input.add_argument('--read2','-2',help='Second read file')

input.add_argument('--db',default='ntm_db',help='Mutation panel name')
input.add_argument('--external_db',type=str,help='Path to db files prefix (overrides "--db" parameter)')

output=parser_sub.add_argument_group("Output options")
output.add_argument('--prefix','-p',default="ntm-profiler",help='Sample prefix for all results generated')

parser_sub.add_argument('--version', action='version', version="NTM-Profiler version %s" % ntmp._VERSION)
parser_sub.set_defaults(func=main_speciate)



parser_sub = subparsers.add_parser('collate', help='Collate results form multiple samples together', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser_sub.add_argument('--outfile','-o',help='Output file name',required = True)
parser_sub.add_argument('--samples',help='File with samples (one per line)')
parser_sub.add_argument('--dir','-d',default=".",help='Storage directory')
parser_sub.add_argument('--version', action='version', version="NTM-Profiler version %s" % ntmp._VERSION)
parser_sub.set_defaults(func=main_collate)


args = parser.parse_args()
if vars(args)=={}:
    parser.print_help(sys.stderr)
else:
    args.func(args)